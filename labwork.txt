app\Http\Controllers\PostControllers.php
<?php
namespace App\Http\Controllers;
use App\Models\Post;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\File;
class PostController extends Controller
{
public function index()
{
$posts=Post::all();
return view('index')->with('posts',$posts);
}
public function article()
{
$posts=Post::all();
return view(article)->with('posts',$posts);
}
public function myadmin()
{
$posts=Post::all();
return view('myadmin')->with('posts',$posts);
}
public function create()
{
//
}
public function store(Request $request)
{
if($request->hasFile("cover")){
$file=$request->file("cover");
$imageName=time().'_'.$file->getClientOriginalName();
$file->move(\public_path("cover/"),$imageName);
$post =new Post([
"title" =>$request->title,
"author" =>$request->author,
"body" =>$request->body,
"cover" =>$imageName,
]);
$post->save();
}
if($request->hasFile("images")){
$files=$request->file("images");
foreach($files as $file){
$imageName=time().'_'.$file->getClientOriginalName();
$request['post_id']=$post->id;
$request['image']=$imageName;
$file->move(\public_path("/images"),$imageName);
Image::create($request->all());
}
}
return redirect("/");
}
public function show(Post $post)
{
//
}
public function edit($id)
{
$posts=Post::findOrFail($id);
return view('edit')->with('posts',$posts);
}
public function update(Request $request,$id)
{
$post=Post::findOrFail($id);
if($request->hasFile("cover")){
if (File::exists("cover/".$post->cover)) {
File::delete("cover/".$post->cover);
}
$file=$request->file("cover");
$post->cover=time()."_".$file->getClientOriginalName();
$file->move(\public_path("/cover"),$post->cover);
$request['cover']=$post->cover;
}
$post->update([
"title" =>$request->title,
"author"=>$request->author,
"body"=>$request->body,
"cover"=>$post->cover,
]);
if($request->hasFile("images")){
$files=$request->file("images");
foreach($files as $file){
$imageName=time().'_'.$file->getClientOriginalName();
$request["post_id"]=$id;
$request["image"]=$imageName;
$file->move(\public_path("images"),$imageName);
Image::create($request->all());
}
}
return redirect("/");
}
public function destroy($id)
{
$posts=Post::findOrFail($id);
if (File::exists("cover/".$posts->cover)) {
File::delete("cover/".$posts->cover);
}
$images=Image::where("post_id",$posts->id)->get();
foreach($images as $image){
if (File::exists("images/".$image->image)) {
File::delete("images/".$image->image);
}
}
$posts->delete();
return back();
}
public function deleteimage($id){
$images=Image::findOrFail($id);
if (File::exists("images/".$images->image)) {
File::delete("images/".$images->image);
}
Image::find($id)->delete();
return back();
}
public function deletecover($id){
$cover=Post::findOrFail($id)->cover;
if (File::exists("cover/".$cover)) {
File::delete("cover/".$cover);
}
return back();
}
}
app/Models/Post.php
<?php
namespace App\Models;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
class Post extends Model
{
use HasFactory;
protected $fillable=[
'title',
'meta_description',
'body',
'excerpt',
'image',
];
public function images(){
return $this->hasMany(Image::class);
}
}
database\migrations\create_posts_table.php
<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
class CreatePostsTable extends Migration
{
public function up()
{
// Создание таблиц
Schema::create('posts', function (Blueprint $table) {
$table->increments('id');
$table->integer('author_id');
$table->integer('category_id')->nullable();
$table->string('title');
$table->string('seo_title')->nullable();
$table->text('excerpt');
$table->text('body');
$table->string('image')->nullable();
$table->string('slug')->unique();
$table->text('meta_description');
$table->text('meta_keywords');
$table->enum('status', ['PUBLISHED', 'DRAFT',
'PENDING'])->default('DRAFT');
$table->boolean('featured')->default(0);
$table->timestamps();
});
}
public function down()
{
Schema::drop('posts');
}
}
resources\views\index.blade.php
resources\views\article.blade.php
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width,
initial-scale=1.0">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link
href="https://fonts.googleapis.com/css2?family=Noto+Sans:wght@500;700&displ
ay=swap" rel="stylesheet">
<link rel="stylesheet" href="../css/style.css">
<title>Поиск нового</title>
</head>
<body>
<header class="header">
<div class="header__inner">
<h1 class="logo__title">Поиск нового</h1>
</div>
</header>
<main>
<div class="content">
<div class="content__photo">
<div class="content__info">
